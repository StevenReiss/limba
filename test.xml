<LIMBA DO='PING' />
<LIMBA DO='LIST' />

<LIMBA DO='FINDJDOC' TYPE='METHOD' USECONTEXT='true'>
<JAVADOC>
  <PRIOR><![CDATA[/** Calculate the force of gravity on the pendulum using the formula from the assignment.
@return a Force object
*/
]]></PRIOR>
  <CODE><![CDATA[public static Force calculateForce(Pendulum p)
{
   // Calculate magnitude
   double magnitude = -Pendulum.getMass() * g * p.getAngle().sine();

   // Error checking - remove me later
   if (Double.isNaN(magnitude)) {
      System.err.println("Got NaN from mass: " + Pendulum.getMass() + ", g: " + g
	       + ", angle: " + p.getAngle() + ", sine(angle): " + p.getAngle().sine());
      System.exit(-1);
   }

   // Calculate angles
   Position pos = p.getPosition();
   // use a pvec to get the angles
   PhysicsVector vec = new PhysicsVector(pos.getX(),pos.getY(),pos.getZ());
   Force gForce = new Force(magnitude,vec.getTheta(),vec.getPhi());
   /*
   System.err.println("  Gravity: " );
   System.err.println(magnitude + ", " + vec.getTheta() + ", " + vec.getPhi());
   System.err.println(gForce);
   */
   return gForce;
}]]></CODE>
</JAVADOC>
</LIMBA>

<LIMBA DO='FIND' TYPE='METHOD'>
<SEARCH WHAT='METHOD' NAME='edu.brown.cs.bubbles.tutorial.romp.Angle.reduce' USECONTEXT='false'
   FILE='/home/spr/Eclipse/tutorial/romp/src/edu/brown/cs/bubbles/tutorial/romp/Angle.java' >
  <SIGNATURE>static double reduce(double)</SIGNATURE>
  <DESCRIPTION><![CDATA[Reduce a negative angle or an angle greater than 2PI
to something between 0 and 2PI. ]]></DESCRIPTION>
  <TESTS>
    <TESTCASE NAME='TEST_1' TYPE='CALLS'>
      <CALL METHOD='reduce' OP='EQL'>
	<INPUT>
	  <VALUE><![CDATA[3]]></VALUE>
	</INPUT>
	<OUTPUT>
	  <VALUE><![CDATA[3]]></VALUE>
	</OUTPUT>
      </CALL>
    </TESTCASE>
    <TESTCASE NAME='TEST_2' TYPE='CALLS'>
      <CALL METHOD='reduce' OP='NEQ'>
	<INPUT>
	  <VALUE><![CDATA[9]]></VALUE>
	</INPUT>
	<OUTPUT>
	  <VALUE><![CDATA[9]]></VALUE>
	</OUTPUT>
      </CALL>
    </TESTCASE>
    <TESTCASE NAME='TEST_3' TYPE='CALLS'>
      <CALL METHOD='reduce' OP='NEQ'>
	<INPUT>
	  <VALUE><![CDATA[-1]]></VALUE>
	</INPUT>
	<OUTPUT>
	  <VALUE><![CDATA[-1]]></VALUE>
	</OUTPUT>
      </CALL>
    </TESTCASE>
  </TESTS>
</SEARCH>
</LIMBA>


<LIMBA DO='FIND' TYPE='CLASS'>
<SEARCH WHAT='CLASS' NAME='edu.brown.cs.limba.LimbaMain.IncludeReader' USECONTEXT='false'
      FILE='/pro/limba/limba/src/LimbaMain.java'  >
   <SIGNATURE>private static class IncludeReader extends BufferedReader</SIGNATURE>
   <DESCRIPTION><![CDATA[Create a Java Reader subclass that can handle includes.
The class should be initialized with a BufferedReader.
If it sees a line starting with a > then the remaineder of the line
is a file name that should be included at that point.
The class should implmeent readLine. ]]></DESCRIPTION>
</SEARCH>
</LIMBA>

<LIMBA DO='EXIT' />


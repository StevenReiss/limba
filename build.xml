<project name='limba' default='all'>

   <property file='build.properties' />

   <available file="./build.properties" type='file' property='setup.done' />
   <path id='setuppath'>
      <pathelement location='..' />
   </path>
   <path id='limbapath'>
      <pathelement location='.' />
   </path>
   <property name='setupfile' refid='setuppath' />
   <property name='limbafile' refid='limbapath' />
   <property name='PRO' value='${setupfile}' />
   <property name='LIMBA' value='${limbafile}' />

   <target name='setup' unless='setup.done'>
      <echo file='./build.properties' message="PRO=${setupfile}${line.separator}" />
      <echo file='./build.properties' message='LIMBA=${limbafile}${line.separator}' append='true' />
      <mkdir dir='./java/edu/brown/cs/limba' />
      <property name='PRO' value='${setupfile}' />
      <property name='LIMBA' value='${limbafile}' />
   </target>


   <available file='${PRO}/ivy' type="dir" property="ivy.present" />
   <property name='IVYLIB' value='${PRO}/ivy/lib' />

   <property name='LIMBALIB' value='${LIMBA}/lib' />
   <path id='spr.classpath'>
     <pathelement location='${LIMBA}/java' />
     <pathelement location='${LIMBA}/javasrc' />
     <fileset dir='${LIMBALIB}' includes='*.jar' />
     <fileset dir='${IVYLIB}' includes='ivy.jar' />
     <fileset dir='${IVYLIB}' includes='junit.jar' />
     <fileset dir='${IVYLIB}' includes='asm.jar' />
     <fileset dir='${PRO}/ivy/lib/eclipsejar' includes='*.jar' />
  </path>

  <target name='all' depends='setup,compile,jar' />

  <target name='compile' depends='setup'>
     <javac srcdir='.' destdir='${LIMBA}/java' debug='on' deprecation='on'
		target='10' source='10'
		includeantruntime='false'>
	<classpath refid='spr.classpath' />
     </javac>
  </target>

  <target name='jar' depends='setup,compile'>
     <jar destfile='limba.jar'>
	<manifest>
	   <attribute name='Main-Class' value='edu.brown.cs.limba.limba.LimbaMain' />
	</manifest>
	<fileset dir='${LIMBA}/java' includes='**/*.class' />
	<fileset dir='${LIMBA}/resources' includes='*.xml' />
	<fileset dir='${LIMBA}/resources' includes='*.proto' />
	<zipfileset src='${LIMBALIB}/ollama4j.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain-http-client.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain4j-chroma.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain4j-core.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain4j-http-client-jdk.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain4j-ollama.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/langchain4j.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/okhttp.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/ollama4j.jar' excludes='META-INF/*' />
	<zipfileset src='${LIMBALIB}/openlp-tools.jar' excludes='META-INF/*' />
     </jar>
   </target>

  <target name='relayjar' depends='setup,compile'>
     <jar destfile='limbarelay.jar'>
	<manifest>
	   <attribute name='Main-Class' value='edu.brown.cs.limba.limba.LimbaRelay' />
	</manifest>
	<fileset dir='${LIMBA}/java' includes='**/*Relay*.class' />
     </jar>
   </target>

   <target name='bubbles' depends='all'>
      <jar destfile='limba.jar'>
	 <manifest>
	    <attribute name="Bubbles-start" value='edu.brown.cs.limbabb.bait.BaitFactory' />
	    <attribute name="Bubbles-palette" value='limbabb.palette' />
	    <attribute name="Bubbles-resource" value='Bait.props' />
	    <attribute name="Bubbles-depends" value='' />
	 </manifest>
	 <fileset dir='${LIMBA}/java' includes='**/*.class' />
	 <fileset dir='${PRO}/limbabb/java' includes='**/*.class' />
	 <fileset dir='${LIMBA}/resources' includes='*.xml' />
	 <fileset dir='${LIMBA}/resources' includes='*.proto' />
<!--	 <fileset dir='${PRO}/ivy/java' includes='**/*.class' />                        -->
	 <zipfileset src='${LIMBALIB}/ollama4j.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain-http-client.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j-chroma.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j-core.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j-http-client-jdk.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j-ollama.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/okhttp.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/openlp-tools.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/jedis.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/langchain4j-redis.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/openlp-tools.jar' excludes='META-INF/*' />
	 <zipfileset src='${LIMBALIB}/openlp-tools.jar' excludes='META-INF/*' />
	 <fileset dir='${PRO}/limbabb' includes='Bait.props' />
	 <fileset dir='${PRO}/limbabb' includes='limbabb.palette' />
      </jar>
      <copy file='limba.jar' tofile='${PRO}/bubbles/dropins/limba.jar' verbose='true' />
      <copy file='limba.jar' tofile='${PRO}/bubbles/dropins.export/limba.jar' verbose='true' />
   </target>

   <target name='test' depends='compile'>
      <java classname='edu.brown.cs.limba.limba.LimbaMain' fork='true'>
	 <classpath refid='spr.classpath' />
	 <arg value='-f' />
	 <arg value='${PRO}/limba/test.in' />
	 <arg value='-d' />
	 <arg value='${PRO}/limba' />
	 <arg value='-l' />
	 <arg value='llama4:scout' />
	 <assertions><enable/></assertions>
      </java>
   </target>

   <target name='testfred4' depends='compile'>
      <java classname='edu.brown.cs.limba.limba.LimbaMain' fork='true'>
	 <classpath refid='spr.classpath' />
	 <arg value='-f' />
	 <arg value='${PRO}/limba/test.in' />
	 <arg value='-l' />
	 <arg value='llama4:scout' />
	 <arg value='-h' />
	 <arg value='llmserver.cs.brown.edu' />
	 <arg value='-p' />
	 <arg value='11435' />
	 <assertions><enable/></assertions>
      </java>
   </target>

   <target name='testxml' depends='compile'>
      <java classname='edu.brown.cs.limba.limba.LimbaMain' fork='true'>
	 <classpath refid='spr.classpath' />
	 <arg value='-f' />
	 <arg value='${PRO}/limba/test.xml' />
	 <arg value='-l' />
	 <arg value='llama4:scout' />
	 <arg value='-L' />
	 <arg value='/home/spr/limbaxml.log' />
	 <assertions><enable/></assertions>
      </java>
   </target>





</project>

